
@page "/TaskList"
<h3>@Name's TaskList</h3>

@if(taskList.Count > 0)
{
<div class="progress my-2">
    <div class="progress-bar" role="progressbar"
         style="width: @(percentDone)%"
         aria-valuemin="0" aria-valuemax="100">@(percentDone)%
    </div>

</div>
}

<EditForm class="form-inline my-2" Model="@newTask" OnSubmit="AddTask">  
        <InputText class="form-control mx-2" @bind-Value="newTask.Task" />
        <InputNumber class="form-control" @bind-Value="newTask.TirePressure"/>
        <button class="btn btn-outline-primary" type="submit">Add Task</button>
</EditForm>

<ul class="list-group">
    @foreach (var task in taskList)
    {
        @if (task.IsComplete)
        {
            <li class="list-group-item list-group-item-secondary my-1"
                @onclick="(()=>task.IsComplete = !task.IsComplete)">
                <del>@task.Task</del>
            </li>
        }
        else
        {
            <li class="list-group-item list-group-item-success my-1"
                @onclick="(()=>task.IsComplete = !task.IsComplete)">
                @task.Task
            </li>
        }
    }
</ul>


@code {
    private List<TaskModel> taskList = new List<TaskModel>();
    private TaskModel newTask = new TaskModel(); // newTask Task - Vaccuming the car, Iscomplete - false


    [Parameter]
    public string Name { get; set; }


    private int percentDone
    {
        get
        {
            return (taskList.Count(x => x.IsComplete) * 100) / taskList.Count;
        }
    }

    private void AddTask()
    {
        taskList.Add(newTask);
        newTask = new TaskModel(); //newtask : Task -null, iscomplete -false
    }
}
